{"mappings":"A,C,SC+CI,EA9CJ,IAAM,EAAsB,SAAS,cAAc,CAAC,gBAC9C,EAAoB,SAAS,cAAc,CAAC,cAC5C,EAAe,SAAS,cAAc,CAAC,SAgC7C,eAAe,IACb,IAAM,EAAQ,MANP,MA9BoB,iCA+BxB,IAAI,CAAC,AAAA,GAAY,EAAS,IAAI,IAC9B,IAAI,CAAC,AAAA,GAAQ,EAAK,OAAO,CAK5B,CAAA,EAAoB,SAAS,CAAG,GAChC,EAAM,KAAK,CAAC,IAAI,OAAO,CAAC,AAAA,IACtB,IAAM,EAAgB,SAAS,aAAa,CAAC,OAC7C,CAAA,EAAc,SAAS,CAAG,EAC1B,EAAoB,WAAW,CAAC,EAClC,GACA,EAAkB,KAAK,CAAG,KAM1B,EAAa,SAAS,CAAG,EACzB,EAAY,IAAI,KAChB,YAAY,KACV,MAAM,SAAS,CAKV,KAAK,KAAK,CAAE,AAAA,CAAA,IAAI,KAAS,CAAA,EAAa,IAJ7C,EAAG,IARL,CAxCA,EAAkB,gBAAgB,CAAC,QAAS,KAC1C,IAAM,EAAa,EAAoB,gBAAgB,CAAC,QAClD,EAAa,EAAkB,KAAK,CAAC,KAAK,CAAC,IAE7C,EAAU,CAAA,EACd,EAAW,OAAO,CAAC,CAAC,EAAe,KACjC,IAAM,EAAY,CAAU,CAAC,EAAM,AAC/B,AAAa,OAAb,GACF,EAAc,SAAS,CAAC,MAAM,CAAC,WAC/B,EAAc,SAAS,CAAC,MAAM,CAAC,aAC/B,EAAU,CAAA,GACD,IAAc,EAAc,SAAS,EAC9C,EAAc,SAAS,CAAC,GAAG,CAAC,WAC5B,EAAc,SAAS,CAAC,MAAM,CAAC,eAE/B,EAAc,SAAS,CAAC,MAAM,CAAC,WAC/B,EAAc,SAAS,CAAC,GAAG,CAAC,aAC5B,EAAU,CAAA,EAEd,GAEI,GAAS,GACf,GAiCA,G,C","sources":["<anon>","client/src/script.js"],"sourcesContent":["(() => {\nvar $fc3599869ded3f23$exports = {};\nconst $fc3599869ded3f23$var$RANDOM_QUOTE_API_URL = \"http://api.quotable.io/random\";\nconst $fc3599869ded3f23$var$quoteDisplayElement = document.getElementById(\"quoteDisplay\");\nconst $fc3599869ded3f23$var$quoteInputElement = document.getElementById(\"quoteInput\");\nconst $fc3599869ded3f23$var$timerElement = document.getElementById(\"timer\");\n$fc3599869ded3f23$var$quoteInputElement.addEventListener(\"input\", ()=>{\n    const arrayQuote = $fc3599869ded3f23$var$quoteDisplayElement.querySelectorAll(\"span\");\n    const arrayValue = $fc3599869ded3f23$var$quoteInputElement.value.split(\"\");\n    let correct = true;\n    arrayQuote.forEach((characterSpan, index)=>{\n        const character = arrayValue[index];\n        if (character == null) {\n            characterSpan.classList.remove(\"correct\");\n            characterSpan.classList.remove(\"incorrect\");\n            correct = false;\n        } else if (character === characterSpan.innerText) {\n            characterSpan.classList.add(\"correct\");\n            characterSpan.classList.remove(\"incorrect\");\n        } else {\n            characterSpan.classList.remove(\"correct\");\n            characterSpan.classList.add(\"incorrect\");\n            correct = false;\n        }\n    });\n    if (correct) $fc3599869ded3f23$var$renderNewQuote();\n});\nfunction $fc3599869ded3f23$var$getRandomQuote() {\n    return fetch($fc3599869ded3f23$var$RANDOM_QUOTE_API_URL).then((response)=>response.json()).then((data)=>data.content);\n}\nasync function $fc3599869ded3f23$var$renderNewQuote() {\n    const quote = await $fc3599869ded3f23$var$getRandomQuote();\n    $fc3599869ded3f23$var$quoteDisplayElement.innerHTML = \"\";\n    quote.split(\"\").forEach((character)=>{\n        const characterSpan = document.createElement(\"span\");\n        characterSpan.innerText = character;\n        $fc3599869ded3f23$var$quoteDisplayElement.appendChild(characterSpan);\n    });\n    $fc3599869ded3f23$var$quoteInputElement.value = null;\n    $fc3599869ded3f23$var$startTimer();\n}\nlet $fc3599869ded3f23$var$startTime;\nfunction $fc3599869ded3f23$var$startTimer() {\n    $fc3599869ded3f23$var$timerElement.innerText = 0;\n    $fc3599869ded3f23$var$startTime = new Date();\n    setInterval(()=>{\n        timer.innerText = $fc3599869ded3f23$var$getTimerTime();\n    }, 1000);\n}\nfunction $fc3599869ded3f23$var$getTimerTime() {\n    return Math.floor((new Date() - $fc3599869ded3f23$var$startTime) / 1000);\n}\n$fc3599869ded3f23$var$renderNewQuote();\n\n})();\n//# sourceMappingURL=index.db9e637e.js.map\n","const RANDOM_QUOTE_API_URL = 'http://api.quotable.io/random'\nconst quoteDisplayElement = document.getElementById('quoteDisplay')\nconst quoteInputElement = document.getElementById('quoteInput')\nconst timerElement = document.getElementById('timer')\n\nquoteInputElement.addEventListener('input', () => {\n  const arrayQuote = quoteDisplayElement.querySelectorAll('span')\n  const arrayValue = quoteInputElement.value.split('')\n\n  let correct = true\n  arrayQuote.forEach((characterSpan, index) => {\n    const character = arrayValue[index]\n    if (character == null) {\n      characterSpan.classList.remove('correct')\n      characterSpan.classList.remove('incorrect')\n      correct = false\n    } else if (character === characterSpan.innerText) {\n      characterSpan.classList.add('correct')\n      characterSpan.classList.remove('incorrect')\n    } else {\n      characterSpan.classList.remove('correct')\n      characterSpan.classList.add('incorrect')\n      correct = false\n    }\n  })\n\n  if (correct) renderNewQuote()\n})\n\nfunction getRandomQuote() {\n  return fetch(RANDOM_QUOTE_API_URL)\n    .then(response => response.json())\n    .then(data => data.content)\n}\n\nasync function renderNewQuote() {\n  const quote = await getRandomQuote()\n  quoteDisplayElement.innerHTML = ''\n  quote.split('').forEach(character => {\n    const characterSpan = document.createElement('span')\n    characterSpan.innerText = character\n    quoteDisplayElement.appendChild(characterSpan)\n  })\n  quoteInputElement.value = null\n  startTimer()\n}\n\nlet startTime\nfunction startTimer() {\n  timerElement.innerText = 0\n  startTime = new Date()\n  setInterval(() => {\n    timer.innerText = getTimerTime()\n  }, 1000)\n}\n\nfunction getTimerTime() {\n  return Math.floor((new Date() - startTime) / 1000);\n}\n\nrenderNewQuote()"],"names":["$fc3599869ded3f23$var$startTime","$fc3599869ded3f23$var$quoteDisplayElement","document","getElementById","$fc3599869ded3f23$var$quoteInputElement","$fc3599869ded3f23$var$timerElement","$fc3599869ded3f23$var$renderNewQuote","quote","fetch","then","response","json","data","content","innerHTML","split","forEach","character","characterSpan","createElement","innerText","appendChild","value","Date","setInterval","timer","Math","floor","addEventListener","arrayQuote","querySelectorAll","arrayValue","correct","index","classList","remove","add"],"version":3,"file":"index.db9e637e.js.map","sourceRoot":"../"}